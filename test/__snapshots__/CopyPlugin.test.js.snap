// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`CopyPlugin logging should logging when "from" is a directory: logs 1`] = `
Object {
  "logs": Array [
    "add ./fixtures/directory as contextDependencies",
    "begin globbing './fixtures/directory/**/*' with a context of './fixtures/directory'",
    "determined './fixtures/directory' is a directory",
    "determined that './fixtures/directory/.dottedfile' should write to '.dottedfile'",
    "determined that './fixtures/directory/directoryfile.txt' should write to 'directoryfile.txt'",
    "determined that './fixtures/directory/nested/deep-nested/deepnested.txt' should write to 'nested/deep-nested/deepnested.txt'",
    "determined that './fixtures/directory/nested/nestedfile.txt' should write to 'nested/nestedfile.txt'",
    "end to adding additional assets",
    "found ./fixtures/directory/.dottedfile",
    "found ./fixtures/directory/directoryfile.txt",
    "found ./fixtures/directory/nested/deep-nested/deepnested.txt",
    "found ./fixtures/directory/nested/nestedfile.txt",
    "getting stats for './fixtures/directory' to determinate 'fromType'",
    "getting stats for './fixtures/directory/.dottedfile' to write to assets",
    "getting stats for './fixtures/directory/directoryfile.txt' to write to assets",
    "getting stats for './fixtures/directory/nested/deep-nested/deepnested.txt' to write to assets",
    "getting stats for './fixtures/directory/nested/nestedfile.txt' to write to assets",
    "processing from: 'directory' to: '.'",
    "reading './fixtures/directory/.dottedfile' to write to assets",
    "reading './fixtures/directory/directoryfile.txt' to write to assets",
    "reading './fixtures/directory/nested/deep-nested/deepnested.txt' to write to assets",
    "reading './fixtures/directory/nested/nestedfile.txt' to write to assets",
    "start to adding additional assets",
    "writing '.dottedfile' to compilation assets from './fixtures/directory/.dottedfile'",
    "writing 'directoryfile.txt' to compilation assets from './fixtures/directory/directoryfile.txt'",
    "writing 'nested/deep-nested/deepnested.txt' to compilation assets from './fixtures/directory/nested/deep-nested/deepnested.txt'",
    "writing 'nested/nestedfile.txt' to compilation assets from './fixtures/directory/nested/nestedfile.txt'",
  ],
}
`;

exports[`CopyPlugin logging should logging when "from" is a file: logs 1`] = `
Object {
  "logs": Array [
    "add ./fixtures/file.txt as fileDependencies",
    "begin globbing './fixtures/file.txt' with a context of './fixtures'",
    "determined './fixtures/file.txt' is a file",
    "determined that './fixtures/file.txt' should write to 'file.txt'",
    "end to adding additional assets",
    "found ./fixtures/file.txt",
    "getting stats for './fixtures/file.txt' to determinate 'fromType'",
    "getting stats for './fixtures/file.txt' to write to assets",
    "processing from: 'file.txt' to: '.'",
    "reading './fixtures/file.txt' to write to assets",
    "start to adding additional assets",
    "writing 'file.txt' to compilation assets from './fixtures/file.txt'",
  ],
}
`;

exports[`CopyPlugin logging should logging when "from" is a glob: logs 1`] = `
Object {
  "logs": Array [
    "add ./fixtures/directory as contextDependencies",
    "add ./fixtures/directory/directoryfile.txt as fileDependencies",
    "add ./fixtures/directory/nested/deep-nested/deepnested.txt as fileDependencies",
    "add ./fixtures/directory/nested/nestedfile.txt as fileDependencies",
    "begin globbing './fixtures/directory/**' with a context of './fixtures'",
    "determined './fixtures/directory/**' is a glob",
    "determined that './fixtures/directory/directoryfile.txt' should write to 'directory/directoryfile.txt'",
    "determined that './fixtures/directory/nested' should write to 'directory/nested'",
    "determined that './fixtures/directory/nested/deep-nested' should write to 'directory/nested/deep-nested'",
    "determined that './fixtures/directory/nested/deep-nested/deepnested.txt' should write to 'directory/nested/deep-nested/deepnested.txt'",
    "determined that './fixtures/directory/nested/nestedfile.txt' should write to 'directory/nested/nestedfile.txt'",
    "end to adding additional assets",
    "found ./fixtures/directory/directoryfile.txt",
    "found ./fixtures/directory/nested",
    "found ./fixtures/directory/nested/deep-nested",
    "found ./fixtures/directory/nested/deep-nested/deepnested.txt",
    "found ./fixtures/directory/nested/nestedfile.txt",
    "getting stats for './fixtures/directory/**' to determinate 'fromType'",
    "getting stats for './fixtures/directory/directoryfile.txt' to write to assets",
    "getting stats for './fixtures/directory/nested' to write to assets",
    "getting stats for './fixtures/directory/nested/deep-nested' to write to assets",
    "getting stats for './fixtures/directory/nested/deep-nested/deepnested.txt' to write to assets",
    "getting stats for './fixtures/directory/nested/nestedfile.txt' to write to assets",
    "processing from: 'directory/**' to: '.'",
    "reading './fixtures/directory/directoryfile.txt' to write to assets",
    "reading './fixtures/directory/nested/deep-nested/deepnested.txt' to write to assets",
    "reading './fixtures/directory/nested/nestedfile.txt' to write to assets",
    "skipping './fixtures/directory/nested' because it is empty directory",
    "skipping './fixtures/directory/nested/deep-nested' because it is empty directory",
    "start to adding additional assets",
    "writing 'directory/directoryfile.txt' to compilation assets from './fixtures/directory/directoryfile.txt'",
    "writing 'directory/nested/deep-nested/deepnested.txt' to compilation assets from './fixtures/directory/nested/deep-nested/deepnested.txt'",
    "writing 'directory/nested/nestedfile.txt' to compilation assets from './fixtures/directory/nested/nestedfile.txt'",
  ],
}
`;
